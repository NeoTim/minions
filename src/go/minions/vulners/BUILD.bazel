load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "minion.go",
        "osreleaseparser.go",
        "testing.go",
        "vulners_api.go",
    ],
    importpath = "github.com/google/minions/go/minions/vulners",
    visibility = ["//visibility:public"],
    deps = [
        "//go/minions:go_default_library",
        "//go/minions/vulners/dpkg:go_default_library",
        "//go/minions/vulners/rpm:go_default_library",
        "//proto/minions:go_default_library",
        "@com_github_golang_protobuf//ptypes:go_default_library_gen",
        "@in_gopkg_resty_v1//:go_default_library",
        "@org_golang_x_net//context:go_default_library",
        "@org_golang_x_time//rate:go_default_library",
    ],
)

# Awful hack to allow go path build to generate all dependencies.
# The duplication should not be necessary, except it is, otherwise
# the test won't see the tests to run (if used as deps)
go_library(
    name = "go_tests_library",
    srcs = [
        "minion_test.go",
        "osreleaseparser_test.go",
        "vulners_api_test.go",
    ],
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    size = "small",
    srcs = [
        "minion_test.go",
        "osreleaseparser_test.go",
        "vulners_api_test.go",
    ],
    data = [
        ":testdata/dpkg.txt",
        ":testdata/os-release.1.txt",
        ":testdata/os-release.2.txt",
    ],
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
    deps = [
        "//go/minions:go_default_library",
        "//proto/minions:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
    ],
)
